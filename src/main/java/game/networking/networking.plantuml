@startuml

title __NETWORKING's Class Diagram__\n

  namespace game {
    namespace networking {
      class game.networking.ClientConnection {
          {static} + instance : ClientConnection
          - host : String
          - in : BufferedReader
          - listeners : ArrayList<IClientListener>
          - out : PrintWriter
          - playerName : String
          - port : int
          - socket : Socket
          + ClientConnection()
          + addListener()
          + removeListener()
          + sendClientBoard()
          + sendMove()
          - dispose()
          - invokeGameOver()
          - invokeGameSetup()
          - invokeUpdate()
          - onEnemyName()
          - onGameOver()
          - onGameSetup()
          - onNameExists()
          - onServerHandshake()
          - onUpdate()
          - readMessage()
          - tryParseInt()
      }
    }
  }
  

  namespace game {
    namespace networking {
      interface game.networking.IClientListener {
          + onGameOverReceived()
          + onGameSetupReceived()
          + onUpdateReceived()
      }
    }
  }
  

  namespace game {
    namespace networking {
      interface game.networking.IMatchConnectionListener {
          + onClientBoardReceived()
          + onMoveReceived()
      }
    }
  }
  

  namespace game {
    namespace networking {
      class game.networking.MatchConnection {
          - leftIn : BufferedReader
          - leftOut : PrintStream
          - listeners : ArrayList<IMatchConnectionListener>
          - rightIn : BufferedReader
          - rightOut : PrintStream
          + MatchConnection()
          + addListener()
          + dispose()
          + removeListener()
          + sendGameOver()
          + sendGameSetup()
          + sendUpdate()
          - invokeClientBoard()
          - invokeMove()
          - onClientBoard()
          - onMove()
          - readMessage()
      }
    }
  }
  

  namespace game {
    namespace networking {
      enum MessageId {
        CLIENT_BOARD
        CLIENT_HANDSHAKE
        ENEMY_NAME
        EXIT
        GAME_OVER
        GAME_SETUP
        MOVE
        NAME_EXISTS
        SERVER_HANDSHAKE
        UPDATE
      }
    }
  }
  

  namespace game {
    namespace networking {
      class game.networking.NetPlayer {
          + name : String
          + socket : Socket
          + NetPlayer()
      }
    }
  }
  

  namespace game {
    namespace networking {
      class game.networking.ServerConnection {
          - port : int
          - serverSocket : ServerSocket
          - waitingPlayers : LinkedList<NetPlayer>
          + ServerConnection()
          - listenForConnections()
          - listenForHandshake()
          - tryParseInt()
      }
    }
  }
  

  game.networking.ClientConnection o-- game.ClientMatch : match
  game.networking.MatchConnection o-- game.networking.NetPlayer : leftPlayer
  game.networking.MatchConnection o-- game.ServerMatch : match
  game.networking.MatchConnection o-- game.networking.NetPlayer : rightPlayer


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
